import telebot
from telebot import types
import mysql.connector
from allfiles.config import bot_token, admin_id, group_id
from allfiles.table import process_day
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import datetime
import time
import pytz

bot = telebot.TeleBot(bot_token)

db = mysql.connector.connect(
    host="localhost",
    user="alarmbot",
    password="rabbit2005",
    port="3306",
    database="alarm"
)

cursor = db.cursor()

# –ü–æ–¥—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ Google –¢–∞–±–ª–∏—Ü–∞–º
scope = ['https://www.googleapis.com/auth/spreadsheets', "https://www.googleapis.com/auth/drive"]
credentials = ServiceAccountCredentials.from_json_keyfile_name("gs_credentials.json", scope)
client = gspread.authorize(credentials)

#–û—Ç–∫—Ä—ã—Ç–∏–µ —Ç–∞–±–ª–∏—Ü—ã
global worksheet
sheet = client.open("TestDatabase")
worksheet = sheet.sheet1

# –°—Ç–∞—Ä—Ç –±–æ—Ç
@bot.message_handler(commands=['start_bot'])
def start_bot(message):
    if message.from_user.id == 775928781:
        bot.send_message(message.chat.id, f'–ë–æ—Ç –±—É–≤ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–∏–π –≤ —Ä–æ–±–æ—á–∏–π —Å—Ç–∞–Ω')
        print('Bot run: OK')
        return process_day()

    process_day()

#–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(commands=['start'])
def start(message):
    #–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥
    try:
        global us_id
        global user_id
        user_name = message.from_user.first_name
        user_login = message.from_user.username
        user_id = message.from_user.id
        cursor.execute(f"SELECT id FROM alarm_table WHERE id = {user_id}")
        us_id = cursor.fetchone()

        #–ó–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        if us_id is None:
            sql = "INSERT INTO alarm_table (id, login, name) VALUES (%s, %s, %s)"
            val = (user_id, user_login, user_name)
            cursor.execute(sql, val)
            db.commit()

            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º
            if message.from_user.id != 775928781:
                telebot.types.ReplyKeyboardRemove()
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                question = types.KeyboardButton('–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫ —á–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è‚úâÔ∏è')
                premium = types.KeyboardButton('–ü—Ä–µ–º—ñ—É–º ‚ö°Ô∏è')
                probot = types.KeyboardButton('–ü—Ä–æ –±–æ—Ç–∞')
                markup.add(question, premium, probot)
                bot.send_message(message.chat.id, f'–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name} \n –ë–æ—Ç –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ',reply_markup=markup)

        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º
            if message.from_user.id != 775928781:
                telebot.types.ReplyKeyboardRemove()
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                question = types.KeyboardButton('–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫ —á–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è‚úâÔ∏è')
                premium = types.KeyboardButton('–ü—Ä–µ–º—ñ—É–º ‚ö°Ô∏è')
                probot = types.KeyboardButton('–ü—Ä–æ –±–æ—Ç–∞')
                markup.add(question, premium, probot)
                bot.send_message(message.chat.id, f'–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name} \n –ë–æ—Ç –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ',reply_markup=markup)

             # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º
            if message.from_user.id == 775928781:
                telebot.types.ReplyKeyboardRemove()
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                announcement = types.KeyboardButton('–û–≥–æ–ª–æ—à–µ–Ω–Ω—è')
                actual = types.KeyboardButton('–ê–∫—Ç—É–∞–ª—å–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å')
                markup.add(announcement, actual)
                bot.send_message(message.chat.id, f'–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name} \n–≥–æ—Ç–æ–≤ –¥–æ —Ä–æ–±–æ—Ç–∏?',reply_markup=markup, parse_mode='html')

    except:
        bot.send_message(message.chat.id, f'üö´ | –ü–æ–º–∏–ª–∫–∞')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(content_types=['text'])
#–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
#–ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏
#–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –ø—Ä–µ–º–∏—É–º
def menu(message):
    if message.text == "–ü—Ä–µ–º—ñ—É–º ‚ö°Ô∏è":
        global premium_yes
        global premium_result
        premium_yes = [('yes',)]
        user_id = message.from_user.id
        select_query = """SELECT premium FROM alarm_table WHERE id = %s"""
        cursor.execute(select_query, (user_id,))
        premium_result = cursor.fetchall()

        if premium_yes == premium_result:
            telebot.types.ReplyKeyboardRemove()
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            cher = types.KeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ —á–µ—Ä–≥—É')
            misto = types.KeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ç–æ')
            #data_off = types.KeyboardButton('–î–∞–Ω–Ω—ñ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å')
            actual_graf_off = types.KeyboardButton('–ê–∫—Ç—É–∞–ª—å–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å')
            markup.add(actual_graf_off, cher, misto)
            bot.send_message(message.chat.id, f'–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}! \n–ß–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?', reply_markup=markup, parse_mode='html')

        if premium_yes != premium_result:
            bot.send_message(message.chat.id, '–í —Ä–æ–∑—Ä–æ–±—Ü—ñ\n–í–∏ –∑–º–æ–∂–µ—Ç–µ –ø—Ä–∏–¥–±–∞—Ç–∏ –ø–æ—Ç—ñ–º')

#–§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ —á–µ—Ä–≥–∏
    if message.text == "–ó–º—ñ–Ω–∏—Ç–∏ —á–µ—Ä–≥—É":
        markup = types.InlineKeyboardMarkup()
        onecherga = types.InlineKeyboardButton('1 —á–µ—Ä–≥–∞', callback_data="onecher")
        twocherga = types.InlineKeyboardButton('2 —á–µ—Ä–≥–∞', callback_data="twocher")
        fricherga = types.InlineKeyboardButton('3 —á–µ—Ä–≥–∞', callback_data="fricher")
        markup.add(onecherga, twocherga, fricherga)
        bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å –≤–∞—à—É —á–µ—Ä–≥—É:', reply_markup=markup)

    if message.text == "–ó–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ç–æ":
        markup = types.InlineKeyboardMarkup()
        dykmisto = types.InlineKeyboardButton('–î–∏–∫–∞–Ω—Å—å–∫–∞ –¥—ñ–ª—å–Ω–∏—Ü—è', callback_data="mistodik")
        zinkmisto = types.InlineKeyboardButton('–ó—ñ–Ω—å–∫—ñ–≤—Å—å–∫–∞ –¥—ñ–ª—å–Ω–∏—Ü—è', callback_data="mistozik")
        markup.add(dykmisto, zinkmisto)
        bot.send_message(message.chat.id, '–í–∏–±–µ—Ä—ñ—Ç—å –¥–æ —è–∫–æ—ó –¥—ñ–ª—å–Ω–∏—Ü—ñ –≤–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω—ñ:', reply_markup=markup)

#–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è —Å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø—Ä–µ–º–∏—É–º–∞ –≤–æ –∏–∑–±–µ–∂–∞–Ω–∏–µ –≤—ã–ª–µ—Ç–æ–≤
    if message.text == "–ê–∫—Ç—É–∞–ª—å–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å":
        premium_yes = [('yes',)]
        user_id = message.from_user.id
        select_query = """SELECT premium FROM alarm_table WHERE id = %s"""
        cursor.execute(select_query, (user_id,))
        premium_result = cursor.fetchall()
        if premium_yes == premium_result:
            tz_kiev = pytz.timezone("Europe/Kiev" )
            day = datetime.datetime.now(tz_kiev).strftime("%d")
            find_date = worksheet.find(day)
            result_date = find_date.col
            result_graf_time = worksheet.col_values(1)
            result_graf_date = worksheet.col_values(result_date)

            bot.send_message(message.chat.id, f'–ì—Ä–∞—Ñ—ñ–∫ –Ω–∞ {day}  –¥–µ–Ω—å –º—ñ—Å—è—Ü—è\n–ß–∞—Å: *{result_graf_time[3]} || {result_graf_date[3]}* \n–ß–∞—Å: *{result_graf_time[4]} || {result_graf_date[4]}* \n–ß–∞—Å: *{result_graf_time[5]} || {result_graf_date[5]}* \n–ß–∞—Å: *{result_graf_time[6]} || {result_graf_date[6]}* \n–ß–∞—Å: *{result_graf_time[7]} || {result_graf_date[7]}* \n–ß–∞—Å: *{result_graf_time[8]} || {result_graf_date[8]}* \n–ß–∞—Å: *{result_graf_time[9]} || {result_graf_date[9]}* \n–ß–∞—Å: *{result_graf_time[10]} || {result_graf_date[10]}* \n–ß–∞—Å: *{result_graf_time[11]} || {result_graf_date[11]}* \n–ß–∞—Å: *{result_graf_time[12]} || {result_graf_date[12]}* \n–ß–∞—Å: *{result_graf_time[13]} || {result_graf_date[13]}*', parse_mode="Markdown")
        elif premium_yes != premium_result:
            bot.send_message(message.chat.id, '–í–∏–±–∞—á—Ç–µ, —Ü—è —Ñ—É–Ω–∫—Ü—ñ—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏—à–µ –∑ –ø—ñ–¥–ø–∏—Å–∫–æ—é "–ü—Ä–µ–º—ñ—É–º"')

    if message.from_user.id == 775928781:
        if message.text == "–û–≥–æ–ª–æ—à–µ–Ω–Ω—è":
            msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è</b>', parse_mode='html')
            bot.register_next_step_handler(msg, announcement_next_step)

        #–§—É–Ω–∫—Ü–∏—è —Ä–∞–∑—Å—ã–ª–∫–∏
    #if message.text == "test":
    #    loh(message)
        #cursor.execute(f"SELECT id FROM alarm_table WHERE spam = 'yes'")
        #all_id = cursor.fetchall()
        #msg = 'suka'
        #for x in all_id:
        #    bot.send_message(x[0], str(msg))
        #    print(x)
        #db.commit()

        #tz_kiev = pytz.timezone("Europe/Kiev" )
        #date_hour = datetime.datetime.now(tz_kiev).strftime("%H:%M")
        #date_hour = '00:30 - 03:00'
        #find_hour = worksheet.find(date_hour)
        #print(find_hour)


        #global date_day
        #tz_kiev = pytz.timezone("Europe/Kiev" )
        #dateSTR = datetime.datetime.now(tz_kiev).strftime("%H:%M")

        #–ü–æ–∏—Å–∫ –¥–∞—Ç—ã –≤ —Ç–∞–±–ª–∏—Ü–µ
        #global result_date
        #find_date = worksheet.find(date_day)
        #result_date = find_date.col

        #if dateSTR == ("00:20"):
        #val = worksheet.cell(dateSTR, result_date).value
        #print(val)
        #bot.send_message(group_id, f'–ß–µ—Ä–µ–∑ 10 —Ö–≤–∏–ª–∏–Ω –º–æ–∂–ª–∏–≤–µ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–≤—ñ—Ç–ª–∞\n{val}\n–ù–∞ –ø–µ—Ä—ñ–æ–¥ 00:30 - 03:00')

        #tz_kie = pytz.timezone("Europe/Kiev" )
        #date_da = datetime.datetime.now(tz_kie).strftime("%d")
        #find_dat = worksheet.find(date_da)
        #result_dat = find_dat.col
        #val = worksheet.cell(4, result_dat).value
        #if val == ('1 (—Ç–∞ 3) —á–µ—Ä–≥–∞'):
        #    print ('test1')
        #if val == ('2 (—Ç–∞ 1) —á–µ—Ä–≥–∞'):
        #    print ('test1')
        #if val == ('3 (—Ç–∞2) —á–µ—Ä–≥–∞'):
        #    print ('test1')
        #print(val)



        #if premium_yes == premium_result:
        #    telebot.types.ReplyKeyboardRemove()
        #   markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        #    cher = types.KeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ —á–µ—Ä–≥—É')
        #    misto = types.KeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ç–æ')
        #    #data_off = types.KeyboardButton('–î–∞–Ω–Ω—ñ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å')
        #    actual_graf_off = types.KeyboardButton('–ê–∫—Ç—É–∞–ª—å–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å')
        #    markup.add(actual_graf_off, cher, misto)
        #    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}! \n–ß–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?', reply_markup=markup, parse_mode='html')


        #if message.text == "–†–æ–∑—Å—ã–ª–∫–∞":
        #    cursor.execute(f"SELECT id FROM alarm_table")
        #    us_id = cursor.fetchall()
        #    print(us_id)
        #    msg = '–¢–µ—Å—Ç'
        #    for x in us_id:
         #       bot.send_message(x[0], str(msg))



    if message.text == "–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫ —á–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è‚úâÔ∏è":
        msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è</b>', parse_mode='html')
        bot.register_next_step_handler(msg, question_next_step)

#–û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞
def question_next_step(message):
    message_question = message.text
    bot.send_message(admin_id, f'–í–æ–ø—Ä–æ—Å: {message_question} \n\n\n–ó–∞–¥–∞–≤:  https://t.me/{message.from_user.username}')

#–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—å—è–≤–ª–µ–Ω–∏—è
def announcement_next_step(message):
    message_announcement = message.text
    bot.send_message(group_id, {message_announcement})

@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    #–û—á–µ—Ä–µ–¥—å
    if call.data == 'onecher':
        user_id = call.message.from_user.id
        bot.delete_message(call.message.chat.id, call.message.id)
        bot.send_message(call.message.chat.id, '–í–∏ –æ–±—Ä–∞–ª–∏ 1 —á–µ—Ä–≥—É')
        sql = f"UPDATE alarm_table SET cherga = '1' WHERE id = {user_id}"
        cursor.execute(sql)
        db.commit()

    if call.data == 'twocher':
        user_id = call.message.from_user.id
        bot.delete_message(call.message.chat.id, call.message.id)
        bot.send_message(call.message.chat.id, '–í–∏ –æ–±—Ä–∞–ª–∏ 2 —á–µ—Ä–≥—É')
        sql = f"UPDATE alarm_table SET cherga = '2' WHERE id = {user_id}"
        cursor.execute(sql)
        db.commit()

    if call.data == 'fricher':
        user_id = call.message.from_user.id
        bot.delete_message(call.message.chat.id, call.message.id)
        bot.send_message(call.message.chat.id, '–í–∏ –æ–±—Ä–∞–ª–∏ 3 —á–µ—Ä–≥—É')
        sql = f"UPDATE alarm_table SET cherga = '3' WHERE id = {user_id}"
        cursor.execute(sql)
        db.commit()

    #–ì–æ—Ä–æ–¥
    if call.data == 'mistodik':
        user_id = call.message.from_user.id
        bot.delete_message(call.message.chat.id, call.message.id)
        bot.send_message(call.message.chat.id, '–í–∏ –æ–±—Ä–∞–ª–∏ –î–∏–∫–∞–Ω—Å—å–∫–∞ –¥—ñ–ª—å–Ω–∏—Ü—è')
        sql = f"UPDATE alarm_table SET misto = '–î–∏–∫–∞–Ω—å–∫–∞' WHERE id = {user_id}"
        cursor.execute(sql)
        db.commit()

    if call.data == 'mistozik':
        user_id = call.message.from_user.id
        bot.delete_message(call.message.chat.id, call.message.id)
        bot.send_message(call.message.chat.id, '–í–∏ –æ–±—Ä–∞–ª–∏ –ó—ñ–Ω—å–∫—ñ–≤—Å—å–∫–∞ –¥—ñ–ª—å–Ω–∏—Ü—è')
        sql = f"UPDATE alarm_table SET misto = '–ó—ñ–Ω—å–∫—ñ–≤' WHERE id = {user_id}"
        cursor.execute(sql)
        db.commit()

bot.polling(none_stop=True)