import telebot
from telebot import types
import mysql.connector
from allfiles.config import bot_token, admin_id, group_id
from allfiles.table import process_day
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import datetime
import time
import pytz
bot = telebot.TeleBot(bot_token)

#–î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
db = mysql.connector.connect(
    host="localhost",
    user="BD USER",
    password="BD PASSWORD",
    port="3306",
    database="DB"
)
cursor = db.cursor()

# –ü–æ–¥—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ Google –¢–∞–±–ª–∏—Ü–∞–º
scope = ['https://www.googleapis.com/auth/spreadsheets', "https://www.googleapis.com/auth/drive"]
credentials = ServiceAccountCredentials.from_json_keyfile_name("gs_credentials.json", scope)
client = gspread.authorize(credentials)

#–û—Ç–∫—Ä—ã—Ç–∏–µ —Ç–∞–±–ª–∏—Ü—ã
global worksheet
sheet = client.open("SHEET NAME")
worksheet = sheet.sheet1

#–ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π —Ä–∞—Å—á—ë—Ç–∞ –∏ —Ä–∞–∑—Å—ã–ª–∫–∏ –±–æ—Ç–∞
@bot.message_handler(commands=['start_bot'])
def start_bot(message):
    if message.from_user.id == ADMIN ID:
        bot.send_message(message.chat.id, f'–ë–æ—Ç –±—É–≤ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–∏–π –≤ —Ä–æ–±–æ—á–∏–π —Å—Ç–∞–Ω')
        print('Bot run: OK')
        return process_day()

    process_day()

#–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(commands=['start'])
def start(message):
    #–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥
    try:
        global us_id
        global user_id
        user_name = message.from_user.first_name
        user_login = message.from_user.username
        user_id = message.from_user.id
        cursor.execute(f"SELECT id FROM alarm_table WHERE id = {user_id}")
        us_id = cursor.fetchone()

        #–ó–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        if us_id is None:
            sql = "INSERT INTO alarm_table (id, login, name) VALUES (%s, %s, %s)"
            val = (user_id, user_login, user_name)
            cursor.execute(sql, val)
            cursor.execute(f"UPDATE alarm_table SET spam = 'yes' WHERE id = {user_id}")
            db.commit()

            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º
            if message.from_user.id != ADMIN ID:
                telebot.types.ReplyKeyboardRemove()
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
                question = types.KeyboardButton('–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫ —á–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è‚úâÔ∏è')
                premium = types.KeyboardButton('–ú–µ–Ω—é ‚ö°Ô∏è')
                probot = types.KeyboardButton('–ü—Ä–æ –±–æ—Ç–∞')
                markup.add(question, premium, probot)
                bot.send_message(message.chat.id, f'–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}',reply_markup=markup)

        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º
            if message.from_user.id != ADMIN ID:
                telebot.types.ReplyKeyboardRemove()
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
                question = types.KeyboardButton('–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫ —á–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è‚úâÔ∏è')
                premium = types.KeyboardButton('–ú–µ–Ω—é ‚ö°Ô∏è')
                probot = types.KeyboardButton('–ü—Ä–æ –±–æ—Ç–∞')
                markup.add(question, premium, probot)
                bot.send_message(message.chat.id, f'–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}',reply_markup=markup)

             # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º
            if message.from_user.id == ADMIN ID:
                telebot.types.ReplyKeyboardRemove()
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
                announcement = types.KeyboardButton('–û–≥–æ–ª–æ—à–µ–Ω–Ω—è')
                actual = types.KeyboardButton('–ê–∫—Ç—É–∞–ª—å–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å')
                markup.add(announcement, actual)
                bot.send_message(message.chat.id, f'–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}',reply_markup=markup, parse_mode='html')

    except:
        bot.send_message(message.chat.id, f'üö´ | –ü–æ–º–∏–ª–∫–∞')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(content_types=['text'])
#–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
def menu(message):
    #–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if message.text == "–ú–µ–Ω—é ‚ö°Ô∏è":
        user_id = message.from_user.id
        telebot.types.ReplyKeyboardRemove()
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        cher = types.KeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ —á–µ—Ä–≥—É')
        misto = types.KeyboardButton('–ó–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ç–æ')
        actual_graf_off = types.KeyboardButton('–ê–∫—Ç—É–∞–ª—å–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å')
        active_spam = types.KeyboardButton('–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–∏ —Ä–æ–∑—Å–∏–ª–∞–Ω–Ω—è')
        back = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(actual_graf_off, cher, misto, active_spam, back)
        bot.send_message(message.chat.id, f'–í–∏ –ø–µ—Ä–µ–π—à–ª–∏ –¥–æ –º–µ–Ω—é', reply_markup=markup, parse_mode='html')

    #–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –ø—Ä–æ—à–ª–æ–µ –º–µ–Ω—é    
    if message.text == "–ù–∞–∑–∞–¥":
        telebot.types.ReplyKeyboardRemove()
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        question = types.KeyboardButton('–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫ —á–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è‚úâÔ∏è')
        premium = types.KeyboardButton('–ú–µ–Ω—é ‚ö°Ô∏è')
        probot = types.KeyboardButton('–ü—Ä–æ –±–æ—Ç–∞')
        markup.add(question, premium, probot)
        bot.send_message(message.chat.id, f'–ß–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏?', reply_markup=markup, parse_mode='html')



#–§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –æ—á–µ—Ä–µ–¥–∏
    if message.text == "–ó–º—ñ–Ω–∏—Ç–∏ —á–µ—Ä–≥—É":
        user_id = message.from_user.id
        markup = types.InlineKeyboardMarkup()
        onecherga = types.InlineKeyboardButton('1 —á–µ—Ä–≥–∞', callback_data="onecher")
        twocherga = types.InlineKeyboardButton('2 —á–µ—Ä–≥–∞', callback_data="twocher")
        fricherga = types.InlineKeyboardButton('3 —á–µ—Ä–≥–∞', callback_data="fricher")
        markup.add(onecherga, twocherga, fricherga)
        bot.send_message(message.chat.id, '–û–±–µ—Ä—ñ—Ç—å –≤–∞—à—É —á–µ—Ä–≥—É:', reply_markup=markup)
#–§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞
    if message.text == "–ó–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ç–æ":
        user_id = message.from_user.id
        markup = types.InlineKeyboardMarkup()
        dykmisto = types.InlineKeyboardButton('–î–∏–∫–∞–Ω—Å—å–∫–∞ –¥—ñ–ª—å–Ω–∏—Ü—è', callback_data="mistodik")
        zinkmisto = types.InlineKeyboardButton('–ó—ñ–Ω—å–∫—ñ–≤—Å—å–∫–∞ –¥—ñ–ª—å–Ω–∏—Ü—è', callback_data="mistozik")
        markup.add(dykmisto, zinkmisto)
        bot.send_message(message.chat.id, '–í–∏–±–µ—Ä—ñ—Ç—å –¥–æ —è–∫–æ—ó –¥—ñ–ª—å–Ω–∏—Ü—ñ –≤–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω—ñ:', reply_markup=markup)

#–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
    if message.text == "–ê–∫—Ç—É–∞–ª—å–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å":
        user_id = message.from_user.id
        tz_kiev = pytz.timezone("Europe/Kiev" )
        day = datetime.datetime.now(tz_kiev).strftime("%d")
        find_date = worksheet.find(day)
        result_date = find_date.col
        result_graf_time = worksheet.col_values(1)
        result_graf_date = worksheet.col_values(result_date)
        bot.send_message(message.chat.id, f'–ì—Ä–∞—Ñ—ñ–∫ –Ω–∞ {day}  –¥–µ–Ω—å –º—ñ—Å—è—Ü—è\n–ß–∞—Å: *{result_graf_time[3]} || {result_graf_date[3]}* \n–ß–∞—Å: *{result_graf_time[4]} || {result_graf_date[4]}* \n–ß–∞—Å: *{result_graf_time[5]} || {result_graf_date[5]}* \n–ß–∞—Å: *{result_graf_time[6]} || {result_graf_date[6]}* \n–ß–∞—Å: *{result_graf_time[7]} || {result_graf_date[7]}* \n–ß–∞—Å: *{result_graf_time[8]} || {result_graf_date[8]}* \n–ß–∞—Å: *{result_graf_time[9]} || {result_graf_date[9]}* \n–ß–∞—Å: *{result_graf_time[10]} || {result_graf_date[10]}* \n–ß–∞—Å: *{result_graf_time[11]} || {result_graf_date[11]}* \n–ß–∞—Å: *{result_graf_time[12]} || {result_graf_date[12]}* \n–ß–∞—Å: *{result_graf_time[13]} || {result_graf_date[13]}*', parse_mode="Markdown")

#–§—É–Ω–∫—Ü–∏—è –æ–±—å—è–≤–ª–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª
    if message.from_user.id == ADMIN ID:
        if message.text == "–û–≥–æ–ª–æ—à–µ–Ω–Ω—è":
            msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è</b>', parse_mode='html')
            bot.register_next_step_handler(msg, announcement_next_step)

#–§—É–∫–Ω—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∏—è\–æ—Ç–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –æ—Ç –±–æ—Ç–∞
    if message.text == "–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–∏ —Ä–æ–∑—Å–∏–ª–∞–Ω–Ω—è":
        markup = types.InlineKeyboardMarkup()
        on = types.InlineKeyboardButton('–í–∫–ª —Ä–æ–∑—Å–∏–ª–∞–Ω–Ω—è', callback_data="on_spam")
        off = types.InlineKeyboardButton('–í–∏–∫–ª —Ä–æ–∑—Å–∏–ª–∞–Ω–Ω—è', callback_data="off_spam")
        markup.add(on, off)
        bot.send_message(message.chat.id, '–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è —Ä–æ–∑—Å–∏–ª–∞–Ω–Ω—è:', reply_markup=markup)

#–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏
    if message.text == "–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫ —á–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è‚úâÔ∏è":
        msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è</b>', parse_mode='html')
        bot.register_next_step_handler(msg, question_next_step)

#–û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞
def question_next_step(message):
    message_question = message.text
    bot.send_message(admin_id, f'–í–æ–ø—Ä–æ—Å: {message_question} \n\n\n–ó–∞–¥–∞–≤:  https://t.me/{message.from_user.username}')

#–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—å—è–≤–ª–µ–Ω–∏—è
def announcement_next_step(message):
    message_announcement = message.text
    bot.send_message(group_id, {message_announcement})

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def callback(call):

    #–í—ã–±–æ—Ä –æ—á–µ—Ä–µ–¥–∏
    #–ü–µ—Ä–≤–∞—è –æ—á–µ—Ä–µ–¥—å
    if call.data == 'onecher':
        bot.delete_message(call.message.chat.id, call.message.id)
        bot.send_message(call.message.chat.id, '–í–∏ –æ–±—Ä–∞–ª–∏ 1 —á–µ—Ä–≥—É')
        sql = f"UPDATE alarm_table SET cherga = '1' WHERE id = {user_id}"
        cursor.execute(sql)
        db.commit()

    #–í—Ç–æ—Ä–∞—è –æ—á–µ—Ä–µ–¥—å
    if call.data == 'twocher':
        bot.delete_message(call.message.chat.id, call.message.id)
        bot.send_message(call.message.chat.id, '–í–∏ –æ–±—Ä–∞–ª–∏ 2 —á–µ—Ä–≥—É')
        sql = f"UPDATE alarm_table SET cherga = '2' WHERE id = {user_id}"
        cursor.execute(sql)
        db.commit()

    #–¢—Ä–µ—Ç—å—è –æ—á–µ—Ä–µ–¥—å
    if call.data == 'fricher':
        bot.delete_message(call.message.chat.id, call.message.id)
        bot.send_message(call.message.chat.id, '–í–∏ –æ–±—Ä–∞–ª–∏ 3 —á–µ—Ä–≥—É')
        sql = f"UPDATE alarm_table SET cherga = '3' WHERE id = {user_id}"
        cursor.execute(sql)
        db.commit()

    #–í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞
    #–ì–æ—Ä–æ–¥ –î–∏–∫–∞–Ω—å–∫–∞
    if call.data == 'mistodik':
        bot.delete_message(call.message.chat.id, call.message.id)
        bot.send_message(call.message.chat.id, '–í–∏ –æ–±—Ä–∞–ª–∏ –î–∏–∫–∞–Ω—Å—å–∫–∞ –¥—ñ–ª—å–Ω–∏—Ü—è')
        sql = f"UPDATE alarm_table SET misto = '–î–∏–∫–∞–Ω—å–∫–∞' WHERE id = {user_id}"
        cursor.execute(sql)
        db.commit()

    #–ì–æ—Ä–æ–¥ –ó—ñ–Ω—å–∫—ñ–≤
    if call.data == 'mistozik':
        bot.delete_message(call.message.chat.id, call.message.id)
        bot.send_message(call.message.chat.id, '–í–∏ –æ–±—Ä–∞–ª–∏ –ó—ñ–Ω—å–∫—ñ–≤—Å—å–∫–∞ –¥—ñ–ª—å–Ω–∏—Ü—è')
        sql = f"UPDATE alarm_table SET misto = '–ó—ñ–Ω—å–∫—ñ–≤' WHERE id = {user_id}"
        cursor.execute(sql)
        db.commit()

    #–í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Å—ã–ª–∫–∏
    #–í–∫–ª —Ä–∞–∑—Å—ã–ª–∫—É
    if call.data == 'on_spam':
        bot.delete_message(call.message.chat.id, call.message.id)
        bot.send_message(call.message.chat.id, '–í–∏  —É–≤—ñ–º–∫–Ω—É–ª–∏ —Ä–æ–∑—Å–∏–ª–∞–Ω–Ω—è')
        sql = f"UPDATE alarm_table SET spam = 'yes' WHERE id = {user_id}"
        cursor.execute(sql)
        db.commit()

    #–í—ã–∫–ª —Ä–∞–∑—Å—ã–ª–∫—É
    if call.data == 'off_spam':
        bot.delete_message(call.message.chat.id, call.message.id)
        bot.send_message(call.message.chat.id, '–í–∏ –≤–∏–º–∫–Ω—É–ª–∏ —Ä–æ–∑—Å–∏–ª–∞–Ω–Ω—è')
        sql = f"UPDATE alarm_table SET spam = 'no' WHERE id = {user_id}"
        cursor.execute(sql)
        db.commit()

bot.polling(none_stop=True)